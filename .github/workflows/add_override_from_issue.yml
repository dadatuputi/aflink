name: Override Link from Approved Override Link Request

on:
  issues:
    types: [closed]
  
jobs:

  check_authorization:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'override link')
    steps:
    - name: Check if authorized user closed the issue
      if: github.event.sender.login == 'dadatuputi'
      run: |
        echo "‚úÖ Issue closed by authorized user: ${{ github.event.sender.login }}"
        echo "AUTHORIZED=true" >> $GITHUB_ENV
        
    - name: Add comment if unauthorized user closed issue
      if: github.event.sender.login != 'dadatuputi'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `üö´ **Link not overidden** - This issue was closed by @${{ github.event.sender.login }} but only @dadatuputi can approve link override requests.
            
            If this link should be overidden, please have @dadatuputi review and close this issue.`
          })
          
    - name: Stop workflow if unauthorized
      if: github.event.sender.login != 'dadatuputi'
      run: |
        echo "‚ùå Unauthorized user closed issue. Stopping workflow."
        exit 0
        
  get_fields:
    runs-on: ubuntu-latest
    needs: check_authorization
    steps:
    - name: get_fields
      run: |
        # Parse the override issue body format
        MATCH_METHOD=$(echo "$BODY" | grep -A2 "### Override Match Method" | tail -n1 | xargs)
        MATCH_STRING=$(echo "$BODY" | grep -A2 "### Match String" | tail -n1 | xargs)
        NEW_TITLE=$(echo "$BODY" | grep -A2 "### Link Title" | tail -n1 | xargs)
        NEW_LINK=$(echo "$BODY" | grep -A2 "### Link URL" | tail -n1 | xargs)

        # Validate required fields
        if [[ -z "$MATCH_METHOD" ]]; then
          echo "VALIDATION_ERROR=Missing match method" >> $GITHUB_ENV
          exit 1
        fi
        
        if [[ -z "$MATCH_STRING" ]]; then
          echo "VALIDATION_ERROR=Missing match string" >> $GITHUB_ENV
          exit 1
        fi
        
        # Export to environment
        echo "MATCH_METHOD=$MATCH_METHOD" >> $GITHUB_ENV
        echo "MATCH_STRING=$MATCH_STRING" >> $GITHUB_ENV
        echo "NEW_TITLE=$NEW_TITLE" >> $GITHUB_ENV
        echo "NEW_LINK=$NEW_LINK" >> $GITHUB_ENV

        echo "‚úÖ Parsed values:"
        echo "  Match Method: $MATCH_METHOD"
        echo "  Match String: $MATCH_STRING"
        echo "  New Title: $NEW_TITLE"
        echo "  New URL: $NEW_LINK"
        
      env:
        BODY: ${{ github.event.issue.body }}

    - name: Add validation error comment
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `‚ùå **Override request failed validation**
            
            **Error:** ${{ env.VALIDATION_ERROR || 'Unknown validation error' }}
            
            Please check your issue form and ensure all required fields are completed correctly. At least one of 'Link Title' or 'Link URL' must be provided.
            
            You can edit this issue and close it again once the problems are fixed.`
          })
          
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Install jq & sponge
      run: |
        sudo apt-get update
        sudo apt-get install --yes --no-install-recommends jq moreutils
        
    - name: Add override to file
      run: |
        set -o pipefail
        OVERRIDE_ID=$(uuidgen)
       
        # Add override entry to flat JSON array (handle null values properly)
        jq --arg MATCH_METHOD "${{ env.MATCH_METHOD }}" \
           --arg MATCH_STRING "${{ env.MATCH_STRING }}" \
           --arg NEW_TITLE "${{ env.NEW_TITLE }}" \
           --arg NEW_LINK "${{ env.NEW_LINK }}" \
           --arg OVERRIDE_ID "$OVERRIDE_ID" \
           '. += [{
             "id": $OVERRIDE_ID,
             "match_method": $MATCH_METHOD,
             "match": $MATCH_STRING,
             "title": (if $NEW_TITLE == "" or $NEW_TITLE == "null" or $NEW_TITLE == "_No response_" then null else $NEW_TITLE end),
             "link": (if $NEW_LINK == "" or $NEW_LINK == "null" or $NEW_LINK == "_No response_" then null else $NEW_LINK end),
             "timestamp": now
           }]' src/links/links_override.json | sponge src/links/links_override.json
        
        echo "‚úÖ Override added to links_override.json"
        
    - name: Commit New Changes
      uses: EndBug/add-and-commit@v9
      with:
        message: Updated links from Issue
        
    - name: Add success comment
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `‚úÖ **Override added successfully!** 
            
            The override for "${{ env.MATCH_STRING }}" ‚Üí "${{ env.NEW_TITLE }}" has been added and will be active on the next site deployment.
            
            **Override Details:**
            - Match Method: ${{ env.MATCH_METHOD }}
            - Match String: ${{ env.MATCH_STRING }}
            - New Title: ${{ env.NEW_TITLE }}
            - New URL: ${{ env.NEW_LINK }}`
          })
